{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Create-your-service-definition","level":2,"type":"heading","text":"Create your service definition"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You start by defining your APIs"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example:"}]},{"type":"codeListing","syntax":"swift","code":["import Foundation","import Arachne","","enum MyAPIService {","    case info","    case userProfile(username: String)","    case postEndpoint(body: MyCodableObject, limit: Int)","}","","extension MyAPIService: ArachneService {","    var baseUrl: String {","        switch self {","        default:","            return \"https:\/\/myapiservice.com\"","        }","    }","","    var path: String {","        switch self {","        case .info:","            return \"\/info\"","        case .userProfile(let username):","            return \"\/users\/\\(username)\"","        case .postEndpoint:","            return \"\/postendpoint\"","        }","    }","","    var queryStringItems: [URLQueryItem]? {","        switch self {","        case .postEndpoint(_, let limit):","            return [","                URLQueryItem(name: \"limit\", value: \"\\(limit)\")","            ]","        default:","            return nil","        }","    }","","    var method: HttpMethod {","        switch self {","        case .postEndpoint:","            return .post","        default:","            return .get","        }","    }","","    var body: Data? {","        switch self{","        case .postEndpoint(let myCodableObject, _):","            return try? JSONEncoder().encode(myCodableObject)","        default:","            return nil","        }","    }","","    var headers: [String: String]? {","        switch self {","        case .postEndpoint:","            return nil","        default:","            return [\"Accept\": \"application\/json\"]","        }","    }","}"]},{"anchor":"Call-endpoints","level":2,"type":"heading","text":"Call endpoints"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Declare your provider"}]},{"type":"codeListing","syntax":"swift","code":["let provider = ArachneProvider<MyAPIService>()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Get data from your endpoint"}]},{"type":"codeListing","syntax":"swift","code":["let (data, _) = try await provider.data(.info)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Letâ€™s see it assembled in an extract of a SwiftUI app"}]},{"type":"codeListing","syntax":"swift","code":["import SwiftUI","import Arachne","import os","","struct Info: Codable {","    let name: String","}","","class MyApiClient {","    private let provider = ArachneProvider<MyAPIService>()","","    func loadInfo() async throws -> Info {","        let (data, _) = try await provider.data(.info)","        return try JSONDecoder().decode(Info.self, from: data)","    }","}","","class MyViewModel: ObservableObject {","    private let apiClient = MyApiClient()","    private let logger = Logger(subsystem: \"Arachne\", category: \"MyInteractor\")","","    @Published var info: Info?","","    func getInfo() async {","        do {","            self.info = try await apiClient.loadInfo()","        } catch {","            logger.error(\"Error: \\(error.localizedDescription)\")","        }","    }","}","","struct MyView: View {","    @ObservedObject var viewModel: MyViewModel","","    var body: some View {","        Text(viewModel.info?.name ?? \"\")","            .onAppear {","                Task {","                    await viewModel.getInfo()","                }","            }","    }","}"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/arachne\/gettingstarted"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Arachne\/documentation\/Arachne\/GettingStarted","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Create an API service definition and make calls to its endpoints."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Getting Started with Arachne","role":"collectionGroup","modules":[{"name":"Arachne"}]},"hierarchy":{"paths":[["doc:\/\/Arachne\/documentation\/Arachne"],["doc:\/\/Arachne\/documentation\/Arachne","doc:\/\/Arachne\/documentation\/Arachne\/ArachneService"]]},"seeAlsoSections":[{"title":"Creating your service","identifiers":["doc:\/\/Arachne\/documentation\/Arachne\/ArachneService"],"generated":true}],"references":{"doc://Arachne/documentation/Arachne/ArachneService":{"role":"symbol","title":"ArachneService","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArachneService"}],"abstract":[{"type":"text","text":"Build an "},{"type":"codeVoice","code":"enum"},{"type":"text","text":" that extends this "},{"type":"codeVoice","code":"Protocol"},{"type":"text","text":" to represent your API service."}],"identifier":"doc:\/\/Arachne\/documentation\/Arachne\/ArachneService","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ArachneService"}],"url":"\/documentation\/arachne\/arachneservice"},"doc://Arachne/documentation/Arachne":{"role":"collection","title":"Arachne","abstract":[{"type":"text","text":"Arachne is a lightweight, minimalistic, zero dependencies networking layer for apps using Swift Concurrency (async\/await) developed in Swift, that provides an opinionated abstraction layer to remove boilerplate code."}],"identifier":"doc:\/\/Arachne\/documentation\/Arachne","kind":"symbol","type":"topic","url":"\/documentation\/arachne"}}}