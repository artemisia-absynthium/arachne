{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":" "},{"kind":"internalParam","text":"hasher"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/arachne.Arachne\/documentation\/Arachne","doc:\/\/arachne.Arachne\/documentation\/Arachne\/HttpMethod","doc:\/\/arachne.Arachne\/documentation\/Arachne\/HttpMethod\/RawRepresentable-Implementations"]]},"metadata":{"modules":[{"name":"Arachne","relatedModules":["Swift"]}],"roleHeading":"Instance Method","symbolKind":"method","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}],"externalID":"s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::s:7Arachne10HttpMethodO","title":"hash(into:)","extendedModule":"Swift"},"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"RawRepresentable.hash(into:)","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","identifier":{"url":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/HttpMethod\/hash(into:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/arachne\/httpmethod\/hash(into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://arachne.Arachne/documentation/Arachne/HttpMethod":{"url":"\/documentation\/arachne\/httpmethod","abstract":[{"type":"text","text":"HTTP methods enumeration"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HttpMethod","kind":"identifier"}],"title":"HttpMethod","navigatorTitle":[{"text":"HttpMethod","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/HttpMethod","role":"symbol"},"doc://arachne.Arachne/documentation/Arachne":{"role":"collection","identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne","url":"\/documentation\/arachne","kind":"symbol","title":"Arachne","abstract":[{"type":"text","text":"Arachne is a lightweight, minimalistic, zero dependencies networking layer for apps using Swift Concurrency (async\/await) developed in Swift, that provides an opinionated abstraction layer to remove boilerplate code."}],"type":"topic"},"doc://arachne.Arachne/documentation/Arachne/HttpMethod/RawRepresentable-Implementations":{"abstract":[],"type":"topic","role":"collectionGroup","url":"\/documentation\/arachne\/httpmethod\/rawrepresentable-implementations","identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/HttpMethod\/RawRepresentable-Implementations","title":"RawRepresentable Implementations","kind":"article"},"doc://arachne.Arachne/documentation/Arachne/HttpMethod/hash(into:)":{"abstract":[],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","type":"topic","url":"\/documentation\/arachne\/httpmethod\/hash(into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6HasherV","text":"Hasher","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"hash(into:)","identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/HttpMethod\/hash(into:)","role":"symbol"}}}