{"hierarchy":{"paths":[["doc:\/\/arachne.Arachne\/documentation\/Arachne"],["doc:\/\/arachne.Arachne\/documentation\/Arachne","doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneService"]]},"metadata":{"role":"collectionGroup","modules":[{"name":"Arachne"}],"title":"Getting Started with Arachne"},"kind":"article","schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"primaryContentSections":[{"content":[{"level":2,"text":"Create your service definition","type":"heading","anchor":"Create-your-service-definition"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You start by defining your APIs"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example:"}]},{"code":["import Foundation","import Arachne","","enum MyAPIService {","    case info","    case userProfile(username: String)","    case postEndpoint(body: MyCodableObject, limit: Int)","}","","extension MyAPIService: ArachneService {","    var baseUrl: String {","        \"https:\/\/myapiservice.com\"","    }","","    var path: String {","        switch self {","        case .info:","            \"\/info\"","        case .userProfile(let username):","            \"\/users\/\\(username)\"","        case .postEndpoint:","            \"\/postendpoint\"","        }","    }","","    var queryStringItems: [URLQueryItem]? {","        switch self {","        case .postEndpoint(_, let limit):","            [URLQueryItem(name: \"limit\", value: \"\\(limit)\")]","        default:","            nil","        }","    }","","    var method: HttpMethod {","        switch self {","        case .postEndpoint:","            .post","        default:","            .get","        }","    }","","    var body: Data? {","        switch self {","        case .postEndpoint(let myCodableObject, _):","            try? JSONEncoder().encode(myCodableObject)","        default:","            nil","        }","    }","","    var headers: [String : String]? {","        switch self {","        case .postEndpoint:","            nil","        default:","            [\"Accept\": \"application\/json\"]","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"level":2,"text":"Call endpoints","type":"heading","anchor":"Call-endpoints"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Declare your provider"}]},{"code":["let provider = ArachneProvider<MyAPIService>()"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Get data from your endpoint","type":"text"}]},{"code":["let (data, _) = try await provider.data(.info)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Letâ€™s see it assembled in an extract of a SwiftUI app","type":"text"}]},{"code":["import SwiftUI","import Arachne","import os","","struct Info: Codable {","    let name: String","}","","class MyApiClient {","    private let provider = ArachneProvider<MyAPIService>()","","    func loadInfo() async throws -> Info {","        let (data, _) = try await provider.data(.info)","        return try JSONDecoder().decode(Info.self, from: data)","    }","}","","@Observable","class MyState {","    private let apiClient = MyApiClient()","    private let logger = Logger(subsystem: \"Arachne\", category: \"MyInteractor\")","","    var info: Info?","","    func getInfo() async {","        do {","            self.info = try await apiClient.loadInfo()","        } catch {","            logger.error(\"Error: \\(error.localizedDescription)\")","        }","    }","}","","struct MyView: View {","    @State var state = MyState()","","    var body: some View {","        Text(state.info?.name ?? \"No name\")","            .task {","                await viewModel.getInfo()","            }","    }","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/arachne\/gettingstarted"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/GettingStarted"},"abstract":[{"type":"text","text":"Create an API service definition and make calls to its endpoints."}],"seeAlsoSections":[{"generated":true,"title":"Creating your service","anchor":"Creating-your-service","identifiers":["doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneService","doc:\/\/arachne.Arachne\/documentation\/Arachne\/HttpMethod"]}],"references":{"doc://arachne.Arachne/documentation/Arachne":{"abstract":[{"text":"Arachne is a lightweight, minimalistic, zero dependencies networking layer for apps using Swift Concurrency (async\/await) developed in Swift, that provides an opinionated abstraction layer to remove boilerplate code.","type":"text"}],"url":"\/documentation\/arachne","identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne","kind":"symbol","type":"topic","role":"collection","title":"Arachne"},"doc://arachne.Arachne/documentation/Arachne/HttpMethod":{"title":"HttpMethod","navigatorTitle":[{"text":"HttpMethod","kind":"identifier"}],"url":"\/documentation\/arachne\/httpmethod","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"HTTP methods enumeration","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HttpMethod","kind":"identifier"}],"identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/HttpMethod"},"doc://arachne.Arachne/documentation/Arachne/ArachneService":{"identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneService","navigatorTitle":[{"text":"ArachneService","kind":"identifier"}],"role":"symbol","url":"\/documentation\/arachne\/arachneservice","title":"ArachneService","type":"topic","abstract":[{"text":"Build an ","type":"text"},{"code":"enum","type":"codeVoice"},{"text":" that extends this ","type":"text"},{"code":"Protocol","type":"codeVoice"},{"text":" to represent your API service.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArachneService","kind":"identifier"}]}}}