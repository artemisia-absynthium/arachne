{"identifier":{"url":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneProvider\/with(requestModifier:)","interfaceLanguage":"swift"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneProvider\/init(urlSession:)","doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneProvider\/with(plugins:)"],"anchor":"Init","title":"Init"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"Arachne"}],"title":"with(requestModifier:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"(","kind":"text"},{"text":"requestModifier","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Arachne0A8ProviderV1Txmfp"},{"text":", ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLRequest","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation10URLRequestV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"ArachneProvider","kind":"typeIdentifier","preciseIdentifier":"s:7Arachne0A8ProviderV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Arachne0A8ProviderV1Txmfp"},{"text":">","kind":"text"}],"symbolKind":"method","externalID":"s:7Arachne0A8ProviderV4with15requestModifierACyxGyx_10Foundation10URLRequestVztYaYbKc_tF"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"(","kind":"text"},{"text":"requestModifier","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:7Arachne0A8ProviderV1Txmfp","text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLRequest","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation10URLRequestV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"ArachneProvider","identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneProvider","kind":"typeIdentifier","preciseIdentifier":"s:7Arachne0A8ProviderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Arachne0A8ProviderV1Txmfp","text":"T"},{"kind":"text","text":">"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"An optional async throwing function that allows to modify the ","type":"text"},{"code":"URLRequest","type":"codeVoice"},{"text":", based on the given ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" endpoint, before itâ€™s submitted.","type":"text"}]}],"name":"requestModifier"}],"kind":"parameters"},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The same "},{"isActive":true,"identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneProvider","type":"reference"},{"type":"text","text":" with the given "},{"type":"codeVoice","code":"requestModifier"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"Example:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let requestModifier: (T, inout URLRequest) async throws -> Void = { endpoint, request in","    switch endpoint {","    case .authEndpoint:","        request.addValue(\"Bearer Token\", forHTTPHeaderField: \"Authorization\")","    default:","        break","    }","}"],"syntax":null}],"kind":"content"}],"variants":[{"paths":["\/documentation\/arachne\/arachneprovider\/with(requestmodifier:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/arachne.Arachne\/documentation\/Arachne","doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneProvider"]]},"sections":[],"abstract":[{"text":"Adds the given ","type":"text"},{"type":"codeVoice","code":"requestModifier"},{"text":" to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneProvider"},{"text":".","type":"text"}],"references":{"doc://arachne.Arachne/documentation/Arachne/ArachneProvider":{"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArachneProvider","kind":"identifier"}],"navigatorTitle":[{"text":"ArachneProvider","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/arachne\/arachneprovider","abstract":[{"text":"Use ","type":"text"},{"identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneProvider","isActive":true,"type":"reference"},{"text":" to make requests to a specific ","type":"text"},{"identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneService","isActive":true,"type":"reference"},{"text":".","type":"text"}],"title":"ArachneProvider","identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneProvider"},"doc://arachne.Arachne/documentation/Arachne/ArachneService":{"kind":"symbol","identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneService","type":"topic","url":"\/documentation\/arachne\/arachneservice","title":"ArachneService","navigatorTitle":[{"kind":"identifier","text":"ArachneService"}],"abstract":[{"type":"text","text":"Build an "},{"code":"enum","type":"codeVoice"},{"text":" that extends this ","type":"text"},{"type":"codeVoice","code":"Protocol"},{"text":" to represent your API service.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArachneService"}]},"doc://arachne.Arachne/documentation/Arachne/ArachneProvider/with(requestModifier:)":{"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"(","kind":"text"},{"text":"requestModifier","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Arachne0A8ProviderV1Txmfp"},{"text":", ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLRequest","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation10URLRequestV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"ArachneProvider","kind":"typeIdentifier","preciseIdentifier":"s:7Arachne0A8ProviderV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Arachne0A8ProviderV1Txmfp"},{"text":">","kind":"text"}],"url":"\/documentation\/arachne\/arachneprovider\/with(requestmodifier:)","title":"with(requestModifier:)","kind":"symbol","identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneProvider\/with(requestModifier:)","abstract":[{"text":"Adds the given ","type":"text"},{"code":"requestModifier","type":"codeVoice"},{"text":" to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneProvider","type":"reference"},{"text":".","type":"text"}]},"doc://arachne.Arachne/documentation/Arachne/ArachneProvider/with(plugins:)":{"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"(","kind":"text"},{"text":"plugins","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"ArachnePlugin","kind":"typeIdentifier","preciseIdentifier":"s:7Arachne0A6PluginP"},{"text":"]) -> ","kind":"text"},{"text":"ArachneProvider","kind":"typeIdentifier","preciseIdentifier":"s:7Arachne0A8ProviderV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Arachne0A8ProviderV1Txmfp"},{"text":">","kind":"text"}],"kind":"symbol","url":"\/documentation\/arachne\/arachneprovider\/with(plugins:)","abstract":[{"type":"text","text":"Adds the given "},{"code":"plugins","type":"codeVoice"},{"text":" to ","type":"text"},{"identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneProvider","isActive":true,"type":"reference"},{"text":".","type":"text"}],"title":"with(plugins:)","identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneProvider\/with(plugins:)"},"doc://arachne.Arachne/documentation/Arachne":{"url":"\/documentation\/arachne","role":"collection","type":"topic","abstract":[{"text":"Arachne is a lightweight, minimalistic, zero dependencies networking layer for apps using Swift Concurrency (async\/await) developed in Swift, that provides an opinionated abstraction layer to remove boilerplate code.","type":"text"}],"title":"Arachne","kind":"symbol","identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne"},"doc://arachne.Arachne/documentation/Arachne/ArachneProvider/init(urlSession:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"urlSession","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"URLSession","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSURLSession"},{"text":")","kind":"text"}],"identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneProvider\/init(urlSession:)","role":"symbol","abstract":[{"type":"text","text":"Initialize a provider with a given "},{"type":"codeVoice","code":"URLSession"},{"type":"text","text":", no plugins and no request modifier."},{"type":"text","text":" "},{"type":"text","text":"After initializing an "},{"type":"reference","identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneProvider","isActive":true},{"type":"text","text":" you can add plugins and a request modifier to it by chaining calls to "},{"type":"reference","identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneProvider\/with(plugins:)","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/arachne.Arachne\/documentation\/Arachne\/ArachneProvider\/with(requestModifier:)","isActive":true},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/arachne\/arachneprovider\/init(urlsession:)","kind":"symbol","title":"init(urlSession:)"}}}